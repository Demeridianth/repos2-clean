my_str = 'bobby'
print(set(my_str)) 
# Вывод:
# {'y', 'b', 'o'}

# Функция set() принимает итерируемый объект и возвращает новый объект класса 'set' (т.е. множество) с элементами исходного объекта. Множество – это неупорядоченная коллекция уникальных элементов, поэтому преобразование строки во множество удаляет все повторы символов.






my_str = 'bobby'
result = len(dict.fromkeys(my_str))
print(result)  
# Вывод:
# 3


# Метод dict.fromkeys принимает итерируемый объект и значение и создает словарь. Ключами этого словаря будут элементы итерируемого объекта. Все ключи будут иметь одно значение – то, которое было передано dict.fromkeys() в качестве аргумента. Если значение не передано, по умолчанию используется None.








my_str = 'bobby'
unique_chars = []
for char in my_str:
    if char not in unique_chars:
        unique_chars.append(char)
print(len(unique_chars))  # 3
print(unique_chars)  # ['b', 'o', 'y']



# Мы использовали цикл for для перебора символов строки. На каждой итерации мы используем оператор not in, чтобы проверить, нет ли символа в списке. Если такого символа в списке нет, мы добавляем его в конец списка при помощи метода list.append().